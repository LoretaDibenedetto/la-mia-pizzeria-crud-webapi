@model List<Pizza>
@{
    List<Pizza> pizzeSpeciali = Model.Where(pizze => pizze.PizzaCategoryId == 3).ToList();
}

<div class="container-md text-center text-white mb-5">
    <div class="row justify-content-center">
        <div class="col-12">
            <div class="my-5 ">
                <h2 class="text-white p-4">

                      MENU' DELLE PIZZE

                </h2>
                <hr class="border border-danger border-2 opacity-50">
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12 text-white mb-5">
        <h3>Pizze speciali</h3>
            <div class="p-3 m-auto">
                <div id="carouselMonitor" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-inner">

                        @for (int i = 0; i < pizzeSpeciali.Count; i++)
                        {

                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <img src="@pizzeSpeciali[i].Image" class=" img-fluid border-3 align-content-center rounded-5" alt="...">
                                <div class="carousel-caption bg-black bg-opacity-50 d-none d-md-block mt-5 rounded">
                                    <h5>@pizzeSpeciali[i].Name</h5>
                                    <p>@pizzeSpeciali[i].Description</p>
                                </div>
                            </div>
                        }
                        
                    </div>
                    <button class="carousel-control-prev btn-dark" type="button" data-bs-target="#carouselMonitor" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next btn-dark" type="button" data-bs-target="#carouselMonitor" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
                       
                

    <div class="row mb-5">
        @if (User.IsInRole("ADMIN"))
        {

        <div class="  col-6 me-5 pe-5 mb-5">
          
            
            <a asp-action="Create" asp-controller="Pizza" type="button" class=" btn btn-outline-danger  ">Crea Pizza</a>
                
            
        </div>
        }   
    <div class="row mb-5">
            @if(Model == null)
            {
                <h1>non ci sono pizze, torna a trovarci!</h1>
            }
            else
            {

              @foreach(Pizza pizza in Model)
                {  
                       
                 <div class="col-12 col-md-12 col-lg-4 mb-4 ">
                    
                    <div class=" card-over  w-75  mb-5 mx-auto ">
                        <img src="@pizza.Image" class="shad card-img-top rounded-5 " alt="@pizza.Name">

                        <div class="border-3 rounded-3    p-2 mt-2">
                            <h5>@pizza.Name</h5>
                            <p>@pizza.Description</p>
                                <div class="rounded-2 text-bg-success  mx-5">

                                   <h5 >@pizza.Price$</h5>

                                </div>
                        <div class=" gap-2 d-sm-block d-md-block mb-3">

                                @if (User.IsInRole("ADMIN"))
                                {
                                    <div class="border-top ">
                                    <a  href="@Url.Action("Update", "Pizza", new {id = pizza.Id})" class="btn btn-outline-warning mt-3 " role="button">Modifica</a>



                                    <form asp-controller="Pizza" asp-action="Delete" asp-route-id="@pizza.Id" method="post" class="mt-3">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-outline-danger btn-sm mt-2">

                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-activity"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line><line x1="14" y1="11" x2="14" y2="17"></line></svg>
                                        </button>
                                    </form>
                                    </div>
                                }
                                    <a href="@Url.Action("Details", "Pizza", new {id = pizza.Id})" class="btn btn-outline-warning mt-3 " role="button">Details</a>
                            </div>
                        </div>
                    </div>
                  </div>
                   
                 }
            }
           
        <hr class="border border-danger border-2 opacity-50">
    </div>
</div>

</div>